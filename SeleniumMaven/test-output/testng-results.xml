<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="793" started-at="2017-10-12T11:30:40Z" finished-at="2017-10-12T11:30:41Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="793" started-at="2017-10-12T11:30:40Z" finished-at="2017-10-12T11:30:41Z">
      <class name="com.vl.test.NewTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="beforeSuite" is-config="true" duration-ms="8753" started-at="2017-10-12T17:00:31Z" finished-at="2017-10-12T17:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="startReport()[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="startReport" is-config="true" duration-ms="264" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="f(java.lang.reflect.Method)[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="f" duration-ms="11" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vl.test.NewTest.f(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="getResult" is-config="true" duration-ms="3" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f status=SUCCESS method=NewTest.f(java.lang.reflect.Method)[pri:0, instance:com.vl.test.NewTest@77caeb3e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="f1(java.lang.reflect.Method)[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="f1" duration-ms="6" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vl.test.NewTest.f1(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f1 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="getResult" is-config="true" duration-ms="1" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f1 status=SUCCESS method=NewTest.f1(java.lang.reflect.Method)[pri:0, instance:com.vl.test.NewTest@77caeb3e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="f2(java.lang.reflect.Method)[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="f2" duration-ms="6" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.vl.test.NewTest.f2(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at com.vl.test.NewTest.f2(NewTest.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- f2 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="getResult" is-config="true" duration-ms="144" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=f2 status=FAILURE method=NewTest.f2(java.lang.reflect.Method)[pri:0, instance:com.vl.test.NewTest@77caeb3e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="endReport" is-config="true" duration-ms="326" started-at="2017-10-12T17:00:40Z" finished-at="2017-10-12T17:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.vl.test.NewTest@77caeb3e]" name="afterSuite" is-config="true" duration-ms="873" started-at="2017-10-12T17:00:41Z" finished-at="2017-10-12T17:00:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.vl.test.NewTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
